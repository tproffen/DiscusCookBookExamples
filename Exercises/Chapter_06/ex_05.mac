discus
############################################################
# EXERCISE 5
############################################################
#  Call this macro with the following parameters:
#
#  $1: Domain size ( >=1 and <= 100)
############################################################
if($0.ne.1) then
   echo Use as: @ex_05.mac <domain_size>
   continue suite
endif
#
variable integer,dsize
dsize=$1
# 
############################################################
# First we create out structure file containing the 
# modulation as in the example in Chapter 6.
############################################################
#
read
  cell wave.cll,100,100,1
#
wave
  func sinus
  acco
  trans
  vect 1,0,0
  osci 0,1,0
  len  25.0
  amp   0.5
  phase 0.0
  sel zr
  run
exit
#
############################################################
# Here is the new part which dampens the displacements
# using the function:
#                      d(x) = 0.5 + 0.5*tanh(r[1]*x - pi)
#
# The value stored in r[1] specified how 'sharp' the
# dampening should be. The only difference between
# this part and the Gaussian dampening described in
# the text is the dampening function itself.
############################################################
#
r[1]=0.1
#
do i[2]=1,n[1]
  r[3]=0.5*dsize*lat[1] - 1.0*blen(x[i[2]],y[i[2]],z[i[2]])
  r[2]=0.5+0.5*tanh(r[1]*(r[3] - 3.1415926))
  y[i[2]]=nint(y[i[2]]) + r[2]*(y[i[2]]-nint(y[i[2]]))
enddo
#
save ex_05_wave.stru
#
############################################################
# Now we create the host structure
############################################################
#
read
  cell cell.cll,100,100,1
#
############################################################
# Creating the domain. The only difference is the command
# assign char since we want a different shape compared to
# the example in Chapter 6.
############################################################
#
domain
  reset
  mode pseudo
  input ex_05.pseudo
  assign char,d1,sphere
  assign fuzzy,d1,0.5
  assign content,d1,ex_05_wave.stru
  assign shape ,d1,1,dsize, 0.0, 0.0,  0.0
  assign shape ,d1,2, 0.0,dsize, 0.0,  0.0
  assign shape ,d1,3, 0.0, 0.0, 1.0,  0.0
  assign orient,d1,1, 1.0, 0.0, 0.0,  0.0
  assign orient,d1,2, 0.0, 1.0, 0.0,  0.0
  assign orient,d1,3, 0.0, 0.0, 1.0,  0.0
  show
  run
exit
#
############################################################
# The macros 'four' and 'plot' used for all simulations
# in this chapter calculate the diffraction pattern and
# export the created structure for plotting. Calculating
# the Fourier transform can take a couple of minutes 
# depending on the computer the simulation is run on.
############################################################
#
@four ex_05
@plot ex_05
#
exit
############################################################
# Plotting
############################################################
@kex_05
wait return


#
#
#  used as @k_get_name ipar, parname, lata,
variable integer, generation
variable integer, member
variable integer, children
variable integer, parameter
variable integer, loop
variable character, partest
fclose all
fopen 1, GENERATION
fget  1, generation,member, children, parameter
fclose all
fopen 1, DIFFEV/Parameter.name
i[1] = -1
$2   = ' '
do loop = -1,parameter
   fget 1, partest
   if('"%c",partest' .eq. '$3') then
      i[1] = 0
      $1 = loop
      $2 = partest
      break 2
   endif
enddo
fclose all
if(i[1].eq.-1) then
   $1 = $3     ! will be ipar = $2 or ipar1 = $2
   loop = $3
   fopen 1, DIFFEV/Parameter.name
   do i[0] = -1,loop
      fget 1, $2
   enddo
   fclose all
endif
